{"version":3,"file":"static/js/134.bf14d0e8.chunk.js","mappings":"sMAsBA,IAnBgB,SAACA,EAAIC,GACnB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEdI,GAAUC,EAAAA,EAAAA,cAAWC,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENhB,EAAGC,GAAM,OAArBY,EAAGC,EAAAG,KACTV,EAAQM,GAAIC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAEZK,EAAAA,GAAAA,MAAYL,EAAAI,GAAIE,SAAQ,yBAAAN,EAAAO,OAAA,GAAAT,EAAA,kBAE1B,CAACZ,EAAIC,IAMP,OAJAqB,EAAAA,EAAAA,YAAU,WACTd,GACD,GAAG,CAACA,IAEG,CAACF,EAAMC,EAChB,C,uGC4BA,UA3Ce,WACb,IAAAL,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BqB,EAAKnB,EAAA,GAAEoB,EAAQpB,EAAA,GACtBqB,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAtB,EAAAA,EAAAA,GAAAoB,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE9BG,GAAgBC,EAAAA,EAAAA,SAAO,GACvBC,GAAQD,EAAAA,EAAAA,QAAO,OACrBT,EAAAA,EAAAA,YAAU,WACJQ,EAAcG,UAChBH,EAAcG,SAAU,GAC1BD,EAAMC,QAAQC,OAChB,GAAG,IAIH,IAAMC,EAAIP,EAAaQ,IAAI,UAAY,GAEvCC,GAAiBC,EAAAA,EAAAA,GAAQC,EAAAA,GAAmBJ,GAArCK,GAAuCnC,EAAAA,EAAAA,GAAAgC,EAAA,GAAjC,GAEPI,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACFC,EAAAA,EAAAA,KAAA,SAAOC,IAAKd,EAAOT,MAAOA,EAAOwB,SAAU,SAAAC,GAAC,OAAIxB,EAASwB,EAAEC,OAAO1B,MAAM,EAAE2B,KAAK,UAC/EL,EAAAA,EAAAA,KAAA,UAAQM,QARgB,WAC1BtB,EAAgBN,EAAQ,CAAE6B,MAAO7B,GAAU,CAAC,EAC7C,EAMsCqB,SAAC,eAErCC,EAAAA,EAAAA,KAAA,MAAAD,SACS,OAANJ,QAAM,IAANA,GAAAA,EAAQa,QAAUlB,EAAW,OAANK,QAAM,IAANA,OAAM,EAANA,EAAQc,KAAI,SAAAC,GAAK,OACzCV,EAAAA,EAAAA,KAAA,MAAAD,UACCC,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,MAAO,CAAEC,KAAMjB,GAAYkB,GAAIJ,EAAMK,GAAGC,WAAWjB,UACxDC,EAAAA,EAAAA,KAAA,KAAAD,SAAIW,EAAMO,WAFHP,EAAMK,GAIV,IACD,OAIT,C,mMC5CAG,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAU,mCAEVC,EAAW,eAAAC,GAAAxD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAuD,EAAA7D,EAAA,OAAAK,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACF+C,EAAAA,EAAAA,IAAU,sBAAuB,CACtDK,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJU,OAIVG,EAAArD,EAAAG,KAJMX,EAAI6D,EAAJ7D,KAAIQ,EAAAwD,OAAA,SAKLhE,EAAKiE,SAAO,wBAAAzD,EAAAO,OAAA,GAAAT,EAAA,KACpB,kBAPuB,OAAAsD,EAAAM,MAAA,KAAAC,UAAA,KASXC,EAAc,eAAAC,GAAAjE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiE,EAAMhB,GAAE,IAAAiB,EAAAvE,EAAA,OAAAK,IAAAA,MAAA,SAAAmE,GAAA,cAAAA,EAAA/D,KAAA+D,EAAA9D,MAAA,cAAA8D,EAAA9D,KAAA,EACb+C,EAAAA,EAAAA,IAAU,UAADgB,OAAWnB,GAAM,CAC/CQ,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJU,OAIVa,EAAAC,EAAA7D,KAJMX,EAAIuE,EAAJvE,KAAIwE,EAAAR,OAAA,SAKLhE,GAAI,wBAAAwE,EAAAzD,OAAA,GAAAuD,EAAA,KACZ,gBAP0BI,GAAA,OAAAL,EAAAH,MAAA,KAAAC,UAAA,KASdQ,EAAgB,eAAAC,GAAAxE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAwE,EAAMvB,GAAE,IAAAwB,EAAA9E,EAAA,OAAAK,IAAAA,MAAA,SAAA0E,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,cAAAqE,EAAArE,KAAA,EACf+C,EAAAA,EAAAA,IAAU,UAADgB,OAAWnB,EAAE,YAAY,CACvDQ,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJU,OAIVoB,EAAAC,EAAApE,KAJMX,EAAI8E,EAAJ9E,KAAI+E,EAAAf,OAAA,SAKLhE,EAAKgF,MAAI,wBAAAD,EAAAhE,OAAA,GAAA8D,EAAA,KACjB,gBAP4BI,GAAA,OAAAL,EAAAV,MAAA,KAAAC,UAAA,KAShBe,EAAmB,eAAAC,GAAA/E,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA+E,EAAM9B,GAAE,IAAA+B,EAAArF,EAAA,OAAAK,IAAAA,MAAA,SAAAiF,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,cAAA4E,EAAA5E,KAAA,EAClB+C,EAAAA,EAAAA,IAAU,UAADgB,OAAWnB,EAAE,YAAY,CACvDQ,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJU,OAIV2B,EAAAC,EAAA3E,KAJMX,EAAIqF,EAAJrF,KAAIsF,EAAAtB,OAAA,SAKLhE,EAAKiE,SAAO,wBAAAqB,EAAAvE,OAAA,GAAAqE,EAAA,KACpB,gBAP+BG,GAAA,OAAAJ,EAAAjB,MAAA,KAAAC,UAAA,KASnBlC,EAAiB,eAAAuD,GAAApF,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAoF,EAAM5D,GAAC,IAAA6D,EAAA1F,EAAA,OAAAK,IAAAA,MAAA,SAAAsF,GAAA,cAAAA,EAAAlF,KAAAkF,EAAAjF,MAAA,cAAAiF,EAAAjF,KAAA,EACf+C,EAAAA,EAAAA,IAAU,uBAADgB,OAAwB5C,GAAK,CAC3DiC,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJU,OAIVgC,EAAAC,EAAAhF,KAJMX,EAAI0F,EAAJ1F,KAAI2F,EAAA3B,OAAA,SAKLhE,EAAKiE,SAAO,wBAAA0B,EAAA5E,OAAA,GAAA0E,EAAA,KACpB,gBAP6BG,GAAA,OAAAJ,EAAAtB,MAAA,KAAAC,UAAA,I","sources":["hooks/useHttp.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport { toast } from 'react-toastify'\n\nconst useHttp = (fn, param) => {\n  const [data, setData] = useState(null)\n\n  const getData = useCallback(async () => {\n\t\ttry {\n      const res = await fn(param)\n      setData(res)\n\t\t} catch (err) {\n      toast.error(err.message)\n\t\t} \n\t}, [fn, param])\n\n  useEffect(() => {\n   getData()\n  }, [getData])\n\n  return [data, setData]\n}\n\nexport default useHttp","import useHttp from 'hooks/useHttp'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Link, useLocation, useSearchParams } from 'react-router-dom'\nimport { fetchMovieByQuery } from 'services/api'\n\nconst Movies = () => {\n  const [value, setValue] = useState('')\n  const [searchParams, setSearchParams] = useSearchParams()\n  \n  const isFirstRender = useRef(true)\n  const myRef = useRef(null)\n  useEffect(() => {\n    if (isFirstRender.current)\n    { isFirstRender.current = false }\n    myRef.current.focus()    \n  }, [])\n  \n  \n  \n  const q = searchParams.get('query') || ''\n\n  const [movies] = useHttp(fetchMovieByQuery, q)\n\n  const location = useLocation()\n  \n  const handleSearchQuery = () => {\n\t\tsetSearchParams(value ? { query: value } : {})\n\t}\n\n  return (\n    <div>\n      <div>\n\t\t\t\t<input ref={myRef} value={value} onChange={e => setValue(e.target.value)} type='text' />\n\t\t\t\t<button onClick={handleSearchQuery}>Search</button>\n\t\t\t</div>\n\t\t\t<ul>\n\t\t\t\t{(movies?.length && q) ? movies?.map(movie => (\n\t\t\t\t\t<li key={movie.id}>\n\t\t\t\t\t\t<Link state={{ from: location }} to={movie.id.toString()}>\n\t\t\t\t\t\t\t<p>{movie.title}</p>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t)) : ''}\n\t\t\t</ul>\n    </div>\n  )\n}\n\nexport default Movies","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = '38073b7a97af15277e125ef03e31899b';\n\nexport const fetchMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieByCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data.cast;\n};\n\nexport const fetchMovieByReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchMovieByQuery = async q => {\n  const { data } = await axios.get(`/search/movie?query=${q}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data.results;\n};\n"],"names":["fn","param","_useState","useState","_useState2","_slicedToArray","data","setData","getData","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","sent","t0","toast","message","stop","useEffect","value","setValue","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","isFirstRender","useRef","myRef","current","focus","q","get","_useHttp","useHttp","fetchMovieByQuery","movies","location","useLocation","_jsxs","children","_jsx","ref","onChange","e","target","type","onClick","query","length","map","movie","Link","state","from","to","id","toString","title","axios","API_KEY","fetchMovies","_ref","_yield$axios$get","params","api_key","abrupt","results","apply","arguments","fetchMovieById","_ref2","_callee2","_yield$axios$get2","_context2","concat","_x","fetchMovieByCast","_ref3","_callee3","_yield$axios$get3","_context3","cast","_x2","fetchMovieByReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}