{"version":3,"file":"static/js/226.65473223.chunk.js","mappings":"uSAuBA,EAjBa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAeC,EAAAA,EAAAA,GAAQC,EAAAA,GAAkBJ,GAAlCK,GAA0CC,EAAAA,EAAAA,GAAAJ,EAAA,GAAtC,GAEX,OACEK,EAAAA,EAAAA,KAAA,MAAAC,SACO,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,KAAI,SAAAC,GAAI,OAAIC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CAChBE,EAAKE,cAAeL,EAAAA,EAAAA,KAAA,OAAKM,IAAG,kCAAAC,OAAoCJ,EAAKE,cAAgBG,IAAKL,EAAKM,KAAMC,MAAO,OACzGV,EAAAA,EAAAA,KAAA,OAAKM,IAAKK,EAAQH,IAAKL,EAAKM,KAAMC,MAAO,OAE7CV,EAAAA,EAAAA,KAAA,KAAAC,SAAKE,EAAKM,QACVL,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,cAAaE,EAAKS,eALKT,EAAKU,QAM5B,KAGX,C,sFCCA,IAnBgB,SAACC,EAAIC,GACnB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAnB,EAAAA,EAAAA,GAAAiB,EAAA,GAA/BG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAEdG,GAAUC,EAAAA,EAAAA,cAAWC,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENf,EAAGC,GAAM,OAArBW,EAAGC,EAAAG,KACTV,EAAQM,GAAIC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAEZK,EAAAA,GAAAA,MAAYL,EAAAI,GAAIE,SAAQ,yBAAAN,EAAAO,OAAA,GAAAT,EAAA,kBAE1B,CAACX,EAAIC,IAMP,OAJAoB,EAAAA,EAAAA,YAAU,WACTd,GACD,GAAG,CAACA,IAEG,CAACF,EAAMC,EAChB,C,mMClBAgB,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAU,mCAEVC,EAAW,eAAAC,GAAAhB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAe,EAAArB,EAAA,OAAAK,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACFO,EAAAA,EAAAA,IAAU,sBAAuB,CACtDK,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJU,OAIVG,EAAAb,EAAAG,KAJMX,EAAIqB,EAAJrB,KAAIQ,EAAAgB,OAAA,SAKLxB,EAAKyB,SAAO,wBAAAjB,EAAAO,OAAA,GAAAT,EAAA,KACpB,kBAPuB,OAAAc,EAAAM,MAAA,KAAAC,UAAA,KASXC,EAAc,eAAAC,GAAAzB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAyB,EAAMC,GAAE,IAAAC,EAAAhC,EAAA,OAAAK,IAAAA,MAAA,SAAA4B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EACbO,EAAAA,EAAAA,IAAU,UAAD7B,OAAW2C,GAAM,CAC/CT,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJU,OAIVc,EAAAC,EAAAtB,KAJMX,EAAIgC,EAAJhC,KAAIiC,EAAAT,OAAA,SAKLxB,GAAI,wBAAAiC,EAAAlB,OAAA,GAAAe,EAAA,KACZ,gBAP0BI,GAAA,OAAAL,EAAAH,MAAA,KAAAC,UAAA,KASdjD,EAAgB,eAAAyD,GAAA/B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA+B,EAAML,GAAE,IAAAM,EAAArC,EAAA,OAAAK,IAAAA,MAAA,SAAAiC,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EACfO,EAAAA,EAAAA,IAAU,UAAD7B,OAAW2C,EAAE,YAAY,CACvDT,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJU,OAIVmB,EAAAC,EAAA3B,KAJMX,EAAIqC,EAAJrC,KAAIsC,EAAAd,OAAA,SAKLxB,EAAKrB,MAAI,wBAAA2D,EAAAvB,OAAA,GAAAqB,EAAA,KACjB,gBAP4BG,GAAA,OAAAJ,EAAAT,MAAA,KAAAC,UAAA,KAShBa,EAAmB,eAAAC,GAAArC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqC,EAAMX,GAAE,IAAAY,EAAA3C,EAAA,OAAAK,IAAAA,MAAA,SAAAuC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAlC,KAAA,EAClBO,EAAAA,EAAAA,IAAU,UAAD7B,OAAW2C,EAAE,YAAY,CACvDT,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJU,OAIVyB,EAAAC,EAAAjC,KAJMX,EAAI2C,EAAJ3C,KAAI4C,EAAApB,OAAA,SAKLxB,EAAKyB,SAAO,wBAAAmB,EAAA7B,OAAA,GAAA2B,EAAA,KACpB,gBAP+BG,GAAA,OAAAJ,EAAAf,MAAA,KAAAC,UAAA,KASnBmB,EAAiB,eAAAC,GAAA3C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA2C,EAAMC,GAAC,IAAAC,EAAAlD,EAAA,OAAAK,IAAAA,MAAA,SAAA8C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EACfO,EAAAA,EAAAA,IAAU,uBAAD7B,OAAwB6D,GAAK,CAC3D3B,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJU,OAIVgC,EAAAC,EAAAxC,KAJMX,EAAIkD,EAAJlD,KAAImD,EAAA3B,OAAA,SAKLxB,EAAKyB,SAAO,wBAAA0B,EAAApC,OAAA,GAAAiC,EAAA,KACpB,gBAP6BI,GAAA,OAAAL,EAAArB,MAAA,KAAAC,UAAA,I","sources":["components/Cast/Cast.jsx","components/hooks/useHttp.jsx","services/api.js"],"sourcesContent":["import useHttp from 'components/hooks/useHttp'\nimport React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { fetchMovieByCast } from 'services/api'\nimport avatar from '../../img/Avatar.png'\n\nconst Cast = () => {\n  const { movieId } = useParams()\n  const [cast] = useHttp(fetchMovieByCast, movieId)\n\n  return (\n    <ul>\n      {cast?.map(item => <li key={item.cast_id}>\n        {item.profile_path ? <img src={`https://image.tmdb.org/t/p/w200${item.profile_path}`} alt={item.name} width={100} />\n          : <img src={avatar} alt={item.name} width={100} />\n        }\n        <p>{ item.name }</p>\n        <p>Character: { item.character }</p>\n      </li>)}\n    </ul>\n  )\n}\n\nexport default Cast","import { useCallback, useEffect, useState } from 'react'\nimport { toast } from 'react-toastify'\n\nconst useHttp = (fn, param) => {\n  const [data, setData] = useState(null)\n\n  const getData = useCallback(async () => {\n\t\ttry {\n      const res = await fn(param)\n      setData(res)\n\t\t} catch (err) {\n      toast.error(err.message)\n\t\t} \n\t}, [fn, param])\n\n  useEffect(() => {\n   getData()\n  }, [getData])\n\n  return [data, setData]\n}\n\nexport default useHttp","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = '38073b7a97af15277e125ef03e31899b';\n\nexport const fetchMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieByCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data.cast;\n};\n\nexport const fetchMovieByReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchMovieByQuery = async q => {\n  const { data } = await axios.get(`/search/movie?query=${q}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data.results;\n};\n"],"names":["movieId","useParams","_useHttp","useHttp","fetchMovieByCast","cast","_slicedToArray","_jsx","children","map","item","_jsxs","profile_path","src","concat","alt","name","width","avatar","character","cast_id","fn","param","_useState","useState","_useState2","data","setData","getData","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","sent","t0","toast","message","stop","useEffect","axios","API_KEY","fetchMovies","_ref","_yield$axios$get","params","api_key","abrupt","results","apply","arguments","fetchMovieById","_ref2","_callee2","id","_yield$axios$get2","_context2","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2","fetchMovieByReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieByQuery","_ref5","_callee5","q","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}